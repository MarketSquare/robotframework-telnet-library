*** Setting ***
Test Setup        Login and set prompt    terminal_emulation=True   terminal_type=vt100
Test Teardown     Close All Connections
Library           Telnet    3.142    CRLF    $    REGEXP    ASCII    strict    DeBuG
Library           String
Resource          telnet_resource.txt

*** Variables ***
${=}=    =

*** Test Cases ***

Execute command
    ${output}=    Execute Command    echo -e "abba\\x1b[3Dcdc"
    Should Match   ${output}    acdc\r\n*

Read Until Regex
    Write    echo -e "abba\\x1b[3Dcdc"
    Read Until Regexp    acdc

Read Until Multiple Regexp
    Write    echo -e "abba\\x1b[3Dcdc"
    Read Until Regexp    foo    acdc    bar

Reads Only the Necessary Amount
    Write    echo -e "abba\\x1b[3Dcdc_foo_bar_dar"
    Read Until Regexp Should match    acdc    acdc
    Read Until should match    _foo      foo
    Read Until should match     _bar      bar
    Read Until regexp should match   _dar    dar

Reads Only the Necessary Amount with rewrites
    Write    echo -e "abba\\x1b[3Dcdc_foo_"
    Read Until Regexp Should match    acdc    acdc
    Write Bare    echo -e "abba\\x1b[3Ddhd_bar_"\r\n
    Read Until Regexp Should match    _foo_*adhd    adhd
    Write Bare    echo -e "abba\\x1b[3Dmma_more"\r\n
    Read until Should Match    _bar_*amma     amma
    Read Until Should match    _more          more

Empties buffer on not found read until
    Write    echo abba
    Run keyword and expect error    No match found *      Read until    not there
    Write bare      token
    Read until should match    token     token

Empties buffer on not found read until regexp
    Write    echo abba
    Run keyword and expect error    No match found *      Read until regexp    not there
    Write bare      token
    Read until regexp should match    token     token

Read
    Write    echo -e "abba\\x1b[3Dcdc"
    Read Should Match     acdc*
    Write bare      token
    Read should match    token

Read Until Reads Using Internal Update Frequency
    Write    echo -e "abba\\x1b[3Dcdc"
    Set timeout    2
    Run with timeout 0.5    Read Until     acdc

Read Until With Timeout Faster Than Internal Frequency
    Write    echo -e "abba\\x1b[3Dcdc"
    Set timeout    0.01
    Run with Timeout 0.05    Read Until     acdc

Read Until Regexp Using Internal Update Frequency
    Write    echo -e "abba\\x1b[3Dcdc"
    Set timeout    2
    Run with timeout 0.5    Read Until Regexp    acdc

Read Until Regexp With Timeout Faster Than Internal Frequency
    Write    echo -e "abba\\x1b[3Dcdc"
    Set timeout    0.01
    Run with Timeout 0.05    Read Until Regexp    acdc

Window Size
    [Setup]    Login and set prompt    terminal_emulation=True   window_size=1024x1024
    Set Timeout   5
    Execute Command    echo $TERM
    Execute Command    stty -a
    Write    echo ${=*1000}
    Read Should Match     ${=*1000}*

Window Size 100x80
    [Setup]    Login and set prompt    terminal_emulation=True   window_size=100x80
    Set Timeout   5
    Execute Command    stty -a
    Write    echo ${=*90}
    Read Should Match     ${=*90}*

*** Keywords ***
Run with timeout 0.5
    [Arguments]    ${kw}    @{args}
    [Timeout]     0.5
    ${res}=   Run keyword    ${kw}    @{args}
    [Return]    ${res}

Run with timeout 0.05
    [Arguments]    ${kw}    @{args}
    [Timeout]     0.05
    ${res}=   Run keyword    ${kw}    @{args}
    [Return]    ${res}

Read until should match
    [Arguments]    ${expected}   ${match}
    ${output}=      Read until   ${match}
    Should match    ${output}    ${expected}

Read until regexp should match
    [Arguments]    ${expected}     @{match}
    ${output}=      Read until regexp   @{match}
    Should match    ${output}    ${expected}

Read Should Match
    [Arguments]    ${expected}
    ${output}=      Read
    Should match    ${output}    ${expected}